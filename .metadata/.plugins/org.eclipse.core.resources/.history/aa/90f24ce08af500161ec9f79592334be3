/***************
//定义系统所有变量
 ****************/
#ifndef _VARIABLE_H
#define _VARIABLE_H

//变量定义
//参考信号部分变量定义
#define PI        3.14159265
#define fs            18  //AD的采样率,单位：kHz
#define Time_Ref      20  //参考信号脉宽,单位：ms
#define f1_Ref        4  //参考信号下限频率,单位：kHz
#define f2_Ref        4  //参考信号上限频率,单位：kHz

#define BUF_SIZE   1024    // Sample buffer size    1024*2=2048=2exp11
#define Block_xcorr   Time_Ref*fs    // 相关参考信号的长度值

#pragma DATA_SECTION(DATABuf1,"DMARAML2");    //自己新加的，用来存储AD0采集到的数据到DSP内部，在28335_RAM_lnk文件中定义
#pragma DATA_SECTION(DATABuf2,"DMARAML3");
#pragma DATA_SECTION(DATABuf3,"DMARAML6");
#pragma DATA_SECTION(DATABuf4,"DMARAML4");
#pragma DATA_SECTION(DATABuf5,"DMARAML5");

int32 DATABuf1[BUF_SIZE];    //自己新加的，用来存储AD0采集到的数据到DSP内部
float32 DATABuf2[BUF_SIZE];    //自己新加的，用来存储AD0采集到的数据到DSP内部
/*
float DATABuf3[Block_xcorr] = {1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01,
		-9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01,
		-5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01,
		7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01,
		7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01,
		-5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01,
		-9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1,
		1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01,
		1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01,
		-9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01,
		-5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01,
		7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01,
		7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01,
		-5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01,
		-9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1,
		1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01,
		1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01,
		-9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01,
		-5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01,
		7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01,
		7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01,
		-5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01,
		-9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1,
		1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01,
		1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01,
		-9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01,
		-5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01,
		7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01,
		7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01,
		-5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01,
		-9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1,
		1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01,
		1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01,
		-9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01,
		-5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01,
		7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01,
		7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01,
		-5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01,
		-9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1,
		1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01,
		1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01,
		-9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01, 7.660444e-01,
		-5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01, 7.660444e-01,
		7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01, -5.000000e-01,
		7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01, 1, 1.736482e-01, -9.396926e-01,
		-5.000000e-01, 7.660444e-01, 7.660444e-01, -5.000000e-01, -9.396926e-01, 1.736482e-01}; //参考信号的数组

*/
float32 DATABuf3[Block_xcorr];  //参考信号的数组
float32 DATABuf4[BUF_SIZE];     //第一个相关结果输出
float32 DATABuf5[BUF_SIZE];     //第二个相关结果输出



#endif
