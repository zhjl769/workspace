/*
 * main.c
 */
/*************************************************/
#include <math.h>
#include <stdio.h>
#include <string.h>

#include <csl.h>
#include <csl_mcbsp.h>
#include <csl_edma.h>
#include <csl_pll.h>
#include <csl_gpio.h>

#include "Sys_init.h"

int main(void)
{
	MCBSP_Handle My_Mcbsp;
	CSL_init();
	ping_data=0x00000000;
	pong_data=0x00000000;

	IRQ_reset(IRQ_EVT_EDMAINT);
	EDMA_intDisable(TCCINTNUM);
	EDMA_intClear(TCCINTNUM);
	EDMA_clearPram(0x00000000);
	/* Lets open up the EDMA channel associated with timer #1. */
	hEdma = EDMA_open(EDMA_CHA_TINT1, EDMA_OPEN_RESET);
	/* We also need two EDMA reload parameter sets so let's allocate them */
	/* here. Notice the -1, this means allocate any availale tale.        */
	hEdmaPing = EDMA_allocTable(-1);
	hEdmaPong = EDMA_allocTable(-1);
	cfgEdma = cfgEdmaPing;

	/* Let's initialize the link fields of the configuration structures */
	Ping_EDMA_config.rld = EDMA_RLD_RMK(0,hEdmaPing);
	Pong_EDMA_config.rld = EDMA_RLD_RMK(0,hEdmaPong);
	cfgEdma.rld     = EDMA_RLD_RMK(0,hEdmaPong);

	/* Now let's program up the EDMA channel with the configuration structure */
	EDMA_config(hEdma, &cfgEdma);

	/* Let's also configure the reload parameter tables in the EDMA PRAM */
	/* with the values in the configuration structures.                  */
	EDMA_config(hEdmaPing, &cfgEdmaPing);
	EDMA_config(hEdmaPong, &cfgEdmaPong);
	/* Enable the related interrupts */
	IRQ_enable(IRQ_EVT_EDMAINT);
	EDMA_intEnable(TCCINTNUM);

	/* Enable the EDMA channel */
	EDMA_enableChannel(hEdma);

	My_Mcbsp = MCBSP_open(MCBSP_DEV1, MCBSP_OPEN_RESET);
	MCBSP_config(My_Mcbsp, &MY_MCBSP_Config);
	MCBSP_start(My_Mcbsp,MCBSP_RCV_START | MCBSP_XMIT_START | MCBSP_SRGR_START| MCBSP_SRGR_FRAMESYNC, MCBSP_SRGR_DEFAULT_DELAY);

	return 0;
}
