/***************
//定义系统所有变量
****************/
#ifndef _VARIABLE_H
#define _VARIABLE_H


//变量定义
#define NFFT      2048 //FFT点数
#define fs        40   //采样率40kHz
#define PI        3.1415926
#define NFFT_mingling 256
#define clk_MHz 100//DSP主频100MHz
//检测部分定义
#define SYNC_TIME_STD    400                  //本地信号长度
#define RevDatReadLen    NFFT-SYNC_TIME_STD   //保留同步信号点数
#define BUF_LEN_MAX      RevDatReadLen        //接收缓存区长度
#define Rev_resave       SYNC_TIME_STD        //保留数据长度
#define N_LPF1     33 //相关输出低通滤波器阶数
#define N_LPF2     33 //窄带滤波输出低通滤波器阶数
#define N_resample 41 //降采样每块点数

//检测相关变量
#define Maikuan_l 5   //相关峰脉宽下限
#define Maikuan_h 18  //相关峰脉宽上限
#define SNR 3         //局部信噪比参数


//串口传输数据定义
//压力传感器
#define Pressure_Delay 300000  //上传压力信息固定延迟单位us
//压力传感器、内部电压采集变量
short PC_init[28];
short PC_DATA[17];     //接收PC数据
short Send_PC_DATA[28];//发送PC数据
short RS485_DATA[12];
const short init_rs485[4] = {0x0fa,0x30,0x04,0x43};//压力传感器初始化数据
const short ask_rs485[5]  = {0x0fa,0x4a,0x01,0x51,0x0a7};
//const short ask_rs485[5] = {0x0fa,0x4a,0x01,0x51,0x43};

short buff;
short f_send_uart;
Uint32 temp_yl_data;
float depth;                //压力传感器拟合深度
volatile short FLAG_yl_init;//压力传感器初始化标志位
volatile short FLAG_yl;     //压力传感器读取标志位

//温度传感器
short DS18B20_flag;
short serial[8];   // 读序列号函数中的数组
short serial_x[8]; // 读取的序列号存放的数组
float temperature; // 返回的真实温度值
//内部AD采集
short temp_ADC;  //AD结果缓存
short ADC_in[64];//内部AD结果缓存数组
short voltage_AD;//电源电压量化值
short noise_10ms;//采集10ms噪声量化值

//系统标志位
volatile short transponder_mode;//应答模式
volatile short main_node;      //相对测阵模式
volatile short main_station;   //正常工作模式
volatile short CIF_enable;
volatile short IIF_enable;
volatile short XDCZ;
volatile short XDCZ_num;
volatile short XDCZ_CIF_count; //相对测阵次数
volatile short XDCZ_max_DMA_N; //每次检测时间
volatile short XDCZ_work_mode; //相对测阵工作模式：电触发；声应答
volatile short DMA_count;      //相对测阵DMA搬移个数计数。
volatile Uint16 DMANum;        //电触发时DMA搬运计数
volatile Uint16 zhuzhan_detect_count; //主站模式时，检测次数计数
volatile Uint16 zhuzhan_detect_count_remain; //主站模式时，检测次数计数所剩的余数
volatile Uint16 DMA_count_zhuzhan; //主站DMA搬移个数计数

volatile Uint32 Time_Delay;      //声应答转发延迟
volatile Uint32 responder_Delay; //信标模式下转发延迟
volatile Uint32 responder_period;//信标模式下同步周期

volatile short Flag_CIF;       //检测CIF信号返回值
volatile short Flag_IIF;       //检测CIF信号返回值
volatile short Flag_CIF_IIF;   //检测CIF信号返回值
volatile short FSK_flag;       //FSK指令标志位
volatile short responder_flag; //电触发标志
volatile short Flag_timer;     //timer0计数器完成标志

volatile short FLAG_RS232_REVOK;//串口接收命令标
volatile short transmit_sig_val;
Uint16 count_timer;//同步信标功能（无用）

volatile short release_flag; //释放器成功状态
volatile short FLAGSENDOVER; //发射信号结束标志位


volatile int Pos_flag;       //检测到信号标志位
volatile short endpos;       //信号在Rev_envelope中出现位置
volatile short Xcorr_max_val;//信号相关最大值（save）
volatile short width_save;   //相关宽度（save）
volatile short endpos_xcorr; //信号在Rev_envelope中出现位置
float endpos_float;
volatile float SNR_HD_out;
volatile Uint32 resend_delay;//转发延迟计数器
volatile Uint32 timer0_cnt;  //定时器100ms计数器
volatile Uint32 timer1_cnt;  //定时器1us计数器

//--------------------------------------------------------
volatile short sig1_flag; //信标1检测标志
volatile short sig2_flag; //信标2检测标志
volatile short sig3_flag; //信标3检测标志
volatile short sig4_flag; //信标4检测标志

//存储信标时延；
Uint32  delay_sig1[50];
Uint32  delay_sig2[50];
Uint32  delay_sig3[50];
Uint32  delay_sig4[50];

//相对测阵 四通道噪声门限定义
volatile short NOISE_TH_huadong;    //噪声滑动门限
         short noise_maxbuffer[2]={0,0};
volatile short NOISE_TH_NEW;        //绝对门限

volatile short NOISE_TH_huadong2;   //噪声滑动门限
         short noise_maxbuffer2[2]={0,0};
volatile short NOISE_TH_NEW2;       //绝对门限

volatile short NOISE_TH_huadong3;   //噪声滑动门限
         short noise_maxbuffer3[2]={0,0};
volatile short NOISE_TH_NEW3;       //绝对门限

volatile short NOISE_TH_huadong4;   //噪声滑动门限
         short noise_maxbuffer4[2]={0,0};
volatile short NOISE_TH_NEW4;       //绝对门限

volatile short point_count_zong_th;
volatile short point_count_zong;    //相关峰初判

//---------------------------------------------------------------------------
//滤波器缓存数组
short h_LPF1_db[N_LPF1+2];
short h_LPF2_db[N_LPF2+2];

//滤波器溢出标志位定义
short oflag_LPF1;
short oflag_LPF2;
short oflag_BPF1;
short oflag_BPF2;

//滤波器系数
extern short h_LPF1[N_LPF1];//低通滤波器系数1;相关包络进行滤波。
extern short h_LPF2[N_LPF2];//低通滤波器系数2
#pragma DATA_SECTION(h_BPF1,"filter")
short h_BPF1[2*NFFT];  //窄带滤波器系数1
#pragma DATA_SECTION(h_BPF2,"filter")
short h_BPF2[2*NFFT];  //窄带滤波器系数2

volatile short ID1;
volatile short ID2;
const short fir_B_XS[17][257] ={
/*8.0k*/				    	{-248 , -257 , 102 , 344 , 111 , -304 , -319 , 128 , 437 , 142 , -394 , -417 , 169 , 579 , 190 , -528 , -561 , 228 , 783 , 257 , -716 , -761 , 309 , 1061 , 348 , -967 , -1025 , 415 , 1422 , 465 , -1287 , -1360 , 549 , 1873 , 610 , -1682 , -1771 , 711 , 2419 , 785 , -2155 , -2259 , 904 , 3060 , 989 , -2705 , -2824 , 1125 , 3796 , 1222 , -3330 , -3463 , 1375 , 4621 , 1482 , -4023 , -4170 , 1649 , 5524 , 1766 , -4777 , -4935 , 1946 , 6495 , 2069 , -5581 , -5747 , 2259 , 7518 , 2388 , -6421 , -6592 , 2584 , 8574 , 2715 , -7282 , -7455 , 2914 , 9643 , 3046 , -8147 , -8319 , 3243 , 10705 , 3373 , -8998 , -9165 , 3564 , 11735 , 3688 , -9816 , -9974 , 3869 , 12712 , 3986 , -10583 , -10729 , 4153 , 13611 , 4258 , -11282 , -11412 , 4407 , 14414 , 4499 , -11895 , -12006 , 4627 , 15099 , 4703 , -12407 , -12497 , 4806 , 15650 , 4865 , -12807 , -12873 , 4940 , 16055 , 4980 , -13084 , -13124 , 5026 , 16301 , 5047 , -13231 , -13244 , 5062 , 16384 , 5062 , -13244 , -13231 , 5047 , 16301 , 5026 , -13124 , -13084 , 4980 , 16055 , 4940 , -12873 , -12807 , 4865 , 15650 , 4806 , -12497 , -12407 , 4703 , 15099 , 4627 , -12006 , -11895 , 4499 , 14414 , 4407 , -11412 , -11282 , 4258 , 13611 , 4153 , -10729 , -10583 , 3986 , 12712 , 3869 , -9974 , -9816 , 3688 , 11735 , 3564 , -9165 , -8998 , 3373 , 10705 , 3243 , -8319 , -8147 , 3046 , 9643 , 2914 , -7455 , -7282 , 2715 , 8574 , 2584 , -6592 , -6421 , 2388 , 7518 , 2259 , -5747 , -5581 , 2069 , 6495 , 1946 , -4935 , -4777 , 1766 , 5524 , 1649 , -4170 , -4023 , 1482 , 4621 , 1375 , -3463 , -3330 , 1222 , 3796 , 1125 , -2824 , -2705 , 989 , 3060 , 904 , -2259 , -2155 , 785 , 2419 , 711 , -1771 , -1682 , 610 , 1873 , 549 , -1360 , -1287 , 465 , 1422 , 415 , -1025 , -967 , 348 , 1061 , 309 , -761 , -716 , 257 , 783 , 228 , -561 , -528 , 190 , 579 , 169 , -417 , -394 , 142 , 437 , 128 , -319 , -304 , 111 , 344 , 102 , -257 , -248},
/*8.5k*/				    	{95 , 317 , 52 , -318 , -211 , 244 , 352 , -97 , -437 , -108 , 434 , 335 , -321 , -535 , 96 , 650 , 214 , -628 , -554 , 435 , 842 , -74 , -987 , -406 , 911 , 909 , -575 , -1305 , 0 , 1463 , 722 , -1278 , -1436 , 717 , 1950 , 163 , -2082 , -1203 , 1710 , 2165 , -823 , -2784 , -457 , 2828 , 1881 , -2172 , -3110 , 850 , 3796 , 923 , -3667 , -2780 , 2615 , 4269 , -750 , -4958 , -1593 , 4551 , 3906 , -2985 , -5616 , 479 , 6219 , 2486 , -5417 , -5246 , 3225 , 7108 , 0 , -7513 , -3603 , 6196 , 6764 , -3281 , -8679 , -706 , 8764 , 4927 , -6819 , -8405 , 3112 , 10251 , 1642 , -9890 , -6415 , 7223 , 10094 , -2692 , -11735 , -2786 , 10811 , 8007 , -7360 , -11744 , 2018 , 13042 , 4098 , -11458 , -9625 , 7200 , 13263 , -1107 , -14086 , -5516 , 11780 , 11180 , -6737 , -14558 , 0 , 14800 , 6963 , -11746 , -12581 , 5989 , 15550 , 1242 , -15133 , -8353 , 11352 , 13742 , -4998 , -16172 , -2544 , 15060 , 9599 , -10621 , -14586 , 3824 , 16384 , 3824 , -14586 , -10621 , 9599 , 15060 , -2544 , -16172 , -4998 , 13742 , 11352 , -8353 , -15133 , 1242 , 15550 , 5989 , -12581 , -11746 , 6963 , 14800 , 0 , -14558 , -6737 , 11180 , 11780 , -5516 , -14086 , -1107 , 13263 , 7200 , -9625 , -11458 , 4098 , 13042 , 2018 , -11744 , -7360 , 8007 , 10811 , -2786 , -11735 , -2692 , 10094 , 7223 , -6415 , -9890 , 1642 , 10251 , 3112 , -8405 , -6819 , 4927 , 8764 , -706 , -8679 , -3281 , 6764 , 6196 , -3603 , -7513 , 0 , 7108 , 3225 , -5246 , -5417 , 2486 , 6219 , 479 , -5616 , -2985 , 3906 , 4551 , -1593 , -4958 , -750 , 4269 , 2615 , -2780 , -3667 , 923 , 3796 , 850 , -3110 , -2172 , 1881 , 2828 , -457 , -2784 , -823 , 2165 , 1710 , -1203 , -2082 , 163 , 1950 , 717 , -1436 , -1278 , 722 , 1463 , 0 , -1305 , -575 , 909 , 911 , -406 , -987 , -74 , 842 , 435 , -554 , -628 , 214 , 650 , 96 , -535 , -321 , 335 , 434 , -108 , -437 , -97 , 352 , 244 , -211 , -318 , 52 , 317 , 95},
/*9.0k*/				    	{95 , -283 , -194 , 243 , 291 , -171 , -375 , 65 , 437 , 72 , -463 , -234 , 442 , 409 , -361 , -581 , 214 , 728 , 0 , -822 , -273 , 838 , 587 , -750 , -911 , 542 , 1205 , -210 , -1422 , -235 , 1513 , 763 , -1436 , -1324 , 1160 , 1853 , -676 , -2273 , 0 , 2508 , 823 , -2488 , -1719 , 2164 , 2589 , -1518 , -3320 , 570 , 3796 , 619 , -3914 , -1943 , 3599 , 3267 , -2819 , -4431 , 1593 , 5272 , 0 , -5643 , -1825 , 5435 , 3701 , -4593 , -5417 , 3132 , 6756 , -1143 , -7518 , -1209 , 7549 , 3699 , -6764 , -6063 , 5165 , 8020 , -2848 , -9313 , 0 , 9736 , 3112 , -9162 , -6168 , 7569 , 8830 , -5049 , -10774 , 1804 , 11735 , 1867 , -11540 , -5597 , 10130 , 8988 , -7581 , -11656 , 4098 , 13273 , 0 , -13611 , -4309 , 12568 , 8383 , -10192 , -11780 , 6675 , 14114 , -2342 , -15099 , -2381 , 14586 , 7013 , -12581 , -11067 , 9254 , 14105 , -4917 , -15789 , 0 , 15918 , 4998 , -14454 , -9560 , 11527 , 13212 , -7425 , -15569 , 2563 , 16384 , 2563 , -15569 , -7425 , 13212 , 11527 , -9560 , -14454 , 4998 , 15918 , 0 , -15789 , -4917 , 14105 , 9254 , -11067 , -12581 , 7013 , 14586 , -2381 , -15099 , -2342 , 14114 , 6675 , -11780 , -10192 , 8383 , 12568 , -4309 , -13611 , 0 , 13273 , 4098 , -11656 , -7581 , 8988 , 10130 , -5597 , -11540 , 1867 , 11735 , 1804 , -10774 , -5049 , 8830 , 7569 , -6168 , -9162 , 3112 , 9736 , 0 , -9313 , -2848 , 8020 , 5165 , -6063 , -6764 , 3699 , 7549 , -1209 , -7518 , -1143 , 6756 , 3132 , -5417 , -4593 , 3701 , 5435 , -1825 , -5643 , 0 , 5272 , 1593 , -4431 , -2819 , 3267 , 3599 , -1943 , -3914 , 619 , 3796 , 570 , -3320 , -1518 , 2589 , 2164 , -1719 , -2488 , 823 , 2508 , 0 , -2273 , -676 , 1853 , 1160 , -1324 , -1436 , 763 , 1513 , -235 , -1422 , -210 , 1205 , 542 , -911 , -750 , 587 , 838 , -273 , -822 , 0 , 728 , 214 , -581 , -361 , 409 , 442 , -234 , -463 , 72 , 437 , 65 , -375 , -171 , 291 , 243 , -194 , -283 , 95},
/*9.5k*/				    	{-248 , 166 , 294 , -132 , -342 , 88 , 390 , -33 , -437 , -36 , 481 , 120 , -519 , -222 , 547 , 341 , -561 , -478 , 554 , 633 , -520 , -802 , 454 , 980 , -348 , -1162 , 198 , 1338 , 0 , -1500 , -249 , 1635 , 549 , -1730 , -896 , 1773 , 1287 , -1750 , -1710 , 1649 , 2155 , -1459 , -2606 , 1171 , 3044 , -781 , -3448 , 286 , 3796 , 310 , -4065 , -999 , 4231 , 1768 , -4273 , -2598 , 4170 , 3467 , -3906 , -4345 , 3471 , 5201 , -2858 , -6001 , 2069 , 6708 , -1111 , -7287 , 0 , 7703 , 1242 , -7923 , -2584 , 7921 , 3989 , -7675 , -5417 , 7170 , 6819 , -6402 , -8147 , 5373 , 9350 , -4097 , -10380 , 2596 , 11189 , -905 , -11735 , -936 , 11984 , 2878 , -11909 , -4864 , 11492 , 6835 , -10729 , -8728 , 9625 , 10479 , -8197 , -12027 , 6475 , 13316 , -4499 , -14297 , 2321 , 14926 , 0 , -15173 , -2399 , 15020 , 4806 , -14459 , -7147 , 13498 , 9352 , -12156 , -11352 , 10467 , 13084 , -8476 , -14492 , 6238 , 15532 , -3818 , -16169 , 1285 , 16384 , 1285 , -16169 , -3818 , 15532 , 6238 , -14492 , -8476 , 13084 , 10467 , -11352 , -12156 , 9352 , 13498 , -7147 , -14459 , 4806 , 15020 , -2399 , -15173 , 0 , 14926 , 2321 , -14297 , -4499 , 13316 , 6475 , -12027 , -8197 , 10479 , 9625 , -8728 , -10729 , 6835 , 11492 , -4864 , -11909 , 2878 , 11984 , -936 , -11735 , -905 , 11189 , 2596 , -10380 , -4097 , 9350 , 5373 , -8147 , -6402 , 6819 , 7170 , -5417 , -7675 , 3989 , 7921 , -2584 , -7923 , 1242 , 7703 , 0 , -7287 , -1111 , 6708 , 2069 , -6001 , -2858 , 5201 , 3471 , -4345 , -3906 , 3467 , 4170 , -2598 , -4273 , 1768 , 4231 , -999 , -4065 , 310 , 3796 , 286 , -3448 , -781 , 3044 , 1171 , -2606 , -1459 , 2155 , 1649 , -1710 , -1750 , 1287 , 1773 , -896 , -1730 , 549 , 1635 , -249 , -1500 , 0 , 1338 , 198 , -1162 , -348 , 980 , 454 , -802 , -520 , 633 , 554 , -478 , -561 , 341 , 547 , -222 , -519 , 120 , 481 , -36 , -437 , -33 , 390 , 88 , -342 , -132 , 294 , 166 , -248},
/*10.0k*/				    	{307 , 0 , -330 , 0 , 359 , 0 , -395 , 0 , 437 , 0 , -487 , 0 , 546 , 0 , -614 , 0 , 693 , 0 , -783 , 0 , 885 , 0 , -999 , 0 , 1126 , 0 , -1267 , 0 , 1422 , 0 , -1591 , 0 , 1775 , 0 , -1974 , 0 , 2189 , 0 , -2419 , 0 , 2664 , 0 , -2924 , 0 , 3200 , 0 , -3491 , 0 , 3796 , 0 , -4116 , 0 , 4449 , 0 , -4795 , 0 , 5154 , 0 , -5524 , 0 , 5905 , 0 , -6296 , 0 , 6696 , 0 , -7103 , 0 , 7518 , 0 , -7937 , 0 , 8361 , 0 , -8787 , 0 , 9215 , 0 , -9643 , 0 , 10070 , 0 , -10494 , 0 , 10914 , 0 , -11328 , 0 , 11735 , 0 , -12133 , 0 , 12522 , 0 , -12898 , 0 , 13262 , 0 , -13611 , 0 , 13945 , 0 , -14262 , 0 , 14561 , 0 , -14840 , 0 , 15099 , 0 , -15336 , 0 , 15552 , 0 , -15743 , 0 , 15911 , 0 , -16055 , 0 , 16172 , 0 , -16265 , 0 , 16331 , 0 , -16371 , 0 , 16384 , 0 , -16371 , 0 , 16331 , 0 , -16265 , 0 , 16172 , 0 , -16055 , 0 , 15911 , 0 , -15743 , 0 , 15552 , 0 , -15336 , 0 , 15099 , 0 , -14840 , 0 , 14561 , 0 , -14262 , 0 , 13945 , 0 , -13611 , 0 , 13262 , 0 , -12898 , 0 , 12522 , 0 , -12133 , 0 , 11735 , 0 , -11328 , 0 , 10914 , 0 , -10494 , 0 , 10070 , 0 , -9643 , 0 , 9215 , 0 , -8787 , 0 , 8361 , 0 , -7937 , 0 , 7518 , 0 , -7103 , 0 , 6696 , 0 , -6296 , 0 , 5905 , 0 , -5524 , 0 , 5154 , 0 , -4795 , 0 , 4449 , 0 , -4116 , 0 , 3796 , 0 , -3491 , 0 , 3200 , 0 , -2924 , 0 , 2664 , 0 , -2419 , 0 , 2189 , 0 , -1974 , 0 , 1775 , 0 , -1591 , 0 , 1422 , 0 , -1267 , 0 , 1126 , 0 , -999 , 0 , 885 , 0 , -783 , 0 , 693 , 0 , -614 , 0 , 546 , 0 , -487 , 0 , 437 , 0 , -395 , 0 , 359 , 0 , -330 , 0 , 307},
/*10.5k*/				    	{-248 , -166 , 294 , 132 , -342 , -88 , 390 , 33 , -437 , 36 , 481 , -120 , -519 , 222 , 547 , -341 , -561 , 478 , 554 , -633 , -520 , 802 , 454 , -980 , -348 , 1162 , 198 , -1338 , 0 , 1500 , -249 , -1635 , 549 , 1730 , -896 , -1773 , 1287 , 1750 , -1710 , -1649 , 2155 , 1459 , -2606 , -1171 , 3044 , 781 , -3448 , -286 , 3796 , -310 , -4065 , 999 , 4231 , -1768 , -4273 , 2598 , 4170 , -3467 , -3906 , 4345 , 3471 , -5201 , -2858 , 6001 , 2069 , -6708 , -1111 , 7287 , 0 , -7703 , 1242 , 7923 , -2584 , -7921 , 3989 , 7675 , -5417 , -7170 , 6819 , 6402 , -8147 , -5373 , 9350 , 4097 , -10380 , -2596 , 11189 , 905 , -11735 , 936 , 11984 , -2878 , -11909 , 4864 , 11492 , -6835 , -10729 , 8728 , 9625 , -10479 , -8197 , 12027 , 6475 , -13316 , -4499 , 14297 , 2321 , -14926 , 0 , 15173 , -2399 , -15020 , 4806 , 14459 , -7147 , -13498 , 9352 , 12156 , -11352 , -10467 , 13084 , 8476 , -14492 , -6238 , 15532 , 3818 , -16169 , -1285 , 16384 , -1285 , -16169 , 3818 , 15532 , -6238 , -14492 , 8476 , 13084 , -10467 , -11352 , 12156 , 9352 , -13498 , -7147 , 14459 , 4806 , -15020 , -2399 , 15173 , 0 , -14926 , 2321 , 14297 , -4499 , -13316 , 6475 , 12027 , -8197 , -10479 , 9625 , 8728 , -10729 , -6835 , 11492 , 4864 , -11909 , -2878 , 11984 , 936 , -11735 , 905 , 11189 , -2596 , -10380 , 4097 , 9350 , -5373 , -8147 , 6402 , 6819 , -7170 , -5417 , 7675 , 3989 , -7921 , -2584 , 7923 , 1242 , -7703 , 0 , 7287 , -1111 , -6708 , 2069 , 6001 , -2858 , -5201 , 3471 , 4345 , -3906 , -3467 , 4170 , 2598 , -4273 , -1768 , 4231 , 999 , -4065 , -310 , 3796 , -286 , -3448 , 781 , 3044 , -1171 , -2606 , 1459 , 2155 , -1649 , -1710 , 1750 , 1287 , -1773 , -896 , 1730 , 549 , -1635 , -249 , 1500 , 0 , -1338 , 198 , 1162 , -348 , -980 , 454 , 802 , -520 , -633 , 554 , 478 , -561 , -341 , 547 , 222 , -519 , -120 , 481 , 36 , -437 , 33 , 390 , -88 , -342 , 132 , 294 , -166 , -248},
/*11.0k*/				    	{95 , 283 , -194 , -243 , 291 , 171 , -375 , -65 , 437 , -72 , -463 , 234 , 442 , -409 , -361 , 581 , 214 , -728 , 0 , 822 , -273 , -838 , 587 , 750 , -911 , -542 , 1205 , 210 , -1422 , 235 , 1513 , -763 , -1436 , 1324 , 1160 , -1853 , -676 , 2273 , 0 , -2508 , 823 , 2488 , -1719 , -2164 , 2589 , 1518 , -3320 , -570 , 3796 , -619 , -3914 , 1943 , 3599 , -3267 , -2819 , 4431 , 1593 , -5272 , 0 , 5643 , -1825 , -5435 , 3701 , 4593 , -5417 , -3132 , 6756 , 1143 , -7518 , 1209 , 7549 , -3699 , -6764 , 6063 , 5165 , -8020 , -2848 , 9313 , 0 , -9736 , 3112 , 9162 , -6168 , -7569 , 8830 , 5049 , -10774 , -1804 , 11735 , -1867 , -11540 , 5597 , 10130 , -8988 , -7581 , 11656 , 4098 , -13273 , 0 , 13611 , -4309 , -12568 , 8383 , 10192 , -11780 , -6675 , 14114 , 2342 , -15099 , 2381 , 14586 , -7013 , -12581 , 11067 , 9254 , -14105 , -4917 , 15789 , 0 , -15918 , 4998 , 14454 , -9560 , -11527 , 13212 , 7425 , -15569 , -2563 , 16384 , -2563 , -15569 , 7425 , 13212 , -11527 , -9560 , 14454 , 4998 , -15918 , 0 , 15789 , -4917 , -14105 , 9254 , 11067 , -12581 , -7013 , 14586 , 2381 , -15099 , 2342 , 14114 , -6675 , -11780 , 10192 , 8383 , -12568 , -4309 , 13611 , 0 , -13273 , 4098 , 11656 , -7581 , -8988 , 10130 , 5597 , -11540 , -1867 , 11735 , -1804 , -10774 , 5049 , 8830 , -7569 , -6168 , 9162 , 3112 , -9736 , 0 , 9313 , -2848 , -8020 , 5165 , 6063 , -6764 , -3699 , 7549 , 1209 , -7518 , 1143 , 6756 , -3132 , -5417 , 4593 , 3701 , -5435 , -1825 , 5643 , 0 , -5272 , 1593 , 4431 , -2819 , -3267 , 3599 , 1943 , -3914 , -619 , 3796 , -570 , -3320 , 1518 , 2589 , -2164 , -1719 , 2488 , 823 , -2508 , 0 , 2273 , -676 , -1853 , 1160 , 1324 , -1436 , -763 , 1513 , 235 , -1422 , 210 , 1205 , -542 , -911 , 750 , 587 , -838 , -273 , 822 , 0 , -728 , 214 , 581 , -361 , -409 , 442 , 234 , -463 , -72 , 437 , -65 , -375 , 171 , 291 , -243 , -194 , 283 , 95},
/*11.5k*/				    	{95 , -317 , 52 , 318 , -211 , -244 , 352 , 97 , -437 , 108 , 434 , -335 , -321 , 535 , 96 , -650 , 214 , 628 , -554 , -435 , 842 , 74 , -987 , 406 , 911 , -909 , -575 , 1305 , 0 , -1463 , 722 , 1278 , -1436 , -717 , 1950 , -163 , -2082 , 1203 , 1710 , -2165 , -823 , 2784 , -457 , -2828 , 1881 , 2172 , -3110 , -850 , 3796 , -923 , -3667 , 2780 , 2615 , -4269 , -750 , 4958 , -1593 , -4551 , 3906 , 2985 , -5616 , -479 , 6219 , -2486 , -5417 , 5246 , 3225 , -7108 , 0 , 7513 , -3603 , -6196 , 6764 , 3281 , -8679 , 706 , 8764 , -4927 , -6819 , 8405 , 3112 , -10251 , 1642 , 9890 , -6415 , -7223 , 10094 , 2692 , -11735 , 2786 , 10811 , -8007 , -7360 , 11744 , 2018 , -13042 , 4098 , 11458 , -9625 , -7200 , 13263 , 1107 , -14086 , 5516 , 11780 , -11180 , -6737 , 14558 , 0 , -14800 , 6963 , 11746 , -12581 , -5989 , 15550 , -1242 , -15133 , 8353 , 11352 , -13742 , -4998 , 16172 , -2544 , -15060 , 9599 , 10621 , -14586 , -3824 , 16384 , -3824 , -14586 , 10621 , 9599 , -15060 , -2544 , 16172 , -4998 , -13742 , 11352 , 8353 , -15133 , -1242 , 15550 , -5989 , -12581 , 11746 , 6963 , -14800 , 0 , 14558 , -6737 , -11180 , 11780 , 5516 , -14086 , 1107 , 13263 , -7200 , -9625 , 11458 , 4098 , -13042 , 2018 , 11744 , -7360 , -8007 , 10811 , 2786 , -11735 , 2692 , 10094 , -7223 , -6415 , 9890 , 1642 , -10251 , 3112 , 8405 , -6819 , -4927 , 8764 , 706 , -8679 , 3281 , 6764 , -6196 , -3603 , 7513 , 0 , -7108 , 3225 , 5246 , -5417 , -2486 , 6219 , -479 , -5616 , 2985 , 3906 , -4551 , -1593 , 4958 , -750 , -4269 , 2615 , 2780 , -3667 , -923 , 3796 , -850 , -3110 , 2172 , 1881 , -2828 , -457 , 2784 , -823 , -2165 , 1710 , 1203 , -2082 , -163 , 1950 , -717 , -1436 , 1278 , 722 , -1463 , 0 , 1305 , -575 , -909 , 911 , 406 , -987 , 74 , 842 , -435 , -554 , 628 , 214 , -650 , 96 , 535 , -321 , -335 , 434 , 108 , -437 , 97 , 352 , -244 , -211 , 318 , 52 , -317 , 95},
/*12.0k*/				    	{-248 , 257 , 102 , -344 , 111 , 304 , -319 , -128 , 437 , -142 , -394 , 417 , 169 , -579 , 190 , 528 , -561 , -228 , 783 , -257 , -716 , 761 , 309 , -1061 , 348 , 967 , -1025 , -415 , 1422 , -465 , -1287 , 1360 , 549 , -1873 , 610 , 1682 , -1771 , -711 , 2419 , -785 , -2155 , 2259 , 904 , -3060 , 989 , 2705 , -2824 , -1125 , 3796 , -1222 , -3330 , 3463 , 1375 , -4621 , 1482 , 4023 , -4170 , -1649 , 5524 , -1766 , -4777 , 4935 , 1946 , -6495 , 2069 , 5581 , -5747 , -2259 , 7518 , -2388 , -6421 , 6592 , 2584 , -8574 , 2715 , 7282 , -7455 , -2914 , 9643 , -3046 , -8147 , 8319 , 3243 , -10705 , 3373 , 8998 , -9165 , -3564 , 11735 , -3688 , -9816 , 9974 , 3869 , -12712 , 3986 , 10583 , -10729 , -4153 , 13611 , -4258 , -11282 , 11412 , 4407 , -14414 , 4499 , 11895 , -12006 , -4627 , 15099 , -4703 , -12407 , 12497 , 4806 , -15650 , 4865 , 12807 , -12873 , -4940 , 16055 , -4980 , -13084 , 13124 , 5026 , -16301 , 5047 , 13231 , -13244 , -5062 , 16384 , -5062 , -13244 , 13231 , 5047 , -16301 , 5026 , 13124 , -13084 , -4980 , 16055 , -4940 , -12873 , 12807 , 4865 , -15650 , 4806 , 12497 , -12407 , -4703 , 15099 , -4627 , -12006 , 11895 , 4499 , -14414 , 4407 , 11412 , -11282 , -4258 , 13611 , -4153 , -10729 , 10583 , 3986 , -12712 , 3869 , 9974 , -9816 , -3688 , 11735 , -3564 , -9165 , 8998 , 3373 , -10705 , 3243 , 8319 , -8147 , -3046 , 9643 , -2914 , -7455 , 7282 , 2715 , -8574 , 2584 , 6592 , -6421 , -2388 , 7518 , -2259 , -5747 , 5581 , 2069 , -6495 , 1946 , 4935 , -4777 , -1766 , 5524 , -1649 , -4170 , 4023 , 1482 , -4621 , 1375 , 3463 , -3330 , -1222 , 3796 , -1125 , -2824 , 2705 , 989 , -3060 , 904 , 2259 , -2155 , -785 , 2419 , -711 , -1771 , 1682 , 610 , -1873 , 549 , 1360 , -1287 , -465 , 1422 , -415 , -1025 , 967 , 348 , -1061 , 309 , 761 , -716 , -257 , 783 , -228 , -561 , 528 , 190 , -579 , 169 , 417 , -394 , -142 , 437 , -128 , -319 , 304 , 111 , -344 , 102 , 257 , -248},
/*12.5k*/				    	{307 , -122 , -234 , 318 , 0 , -347 , 279 , 159 , -437 , 176 , 344 , -476 , 0 , 535 , -434 , -250 , 693 , -282 , -554 , 769 , 0 , -869 , 706 , 406 , -1126 , 457 , 896 , -1240 , 0 , 1390 , -1125 , -643 , 1775 , -717 , -1396 , 1921 , 0 , -2127 , 1710 , 972 , -2664 , 1069 , 2068 , -2828 , 0 , 3089 , -2468 , -1394 , 3796 , -1513 , -2910 , 3955 , 0 , -4269 , 3391 , 1903 , -5154 , 2043 , 3906 , -5279 , 0 , 5635 , -4452 , -2486 , 6696 , -2640 , -5023 , 6753 , 0 , -7139 , 5612 , 3118 , -8361 , 3281 , 6214 , -8316 , 0 , 8712 , -6819 , -3772 , 10070 , -3935 , -7421 , 9890 , 0 , -10275 , 8010 , 4413 , -11735 , 4568 , 8580 , -11390 , 0 , 11744 , -9120 , -5006 , 13262 , -5143 , -9625 , 12731 , 0 , -13032 , 10085 , 5516 , -14561 , 5627 , 10493 , -13832 , 0 , 14062 , -10844 , -5911 , 15552 , -5989 , -11132 , 14625 , 0 , -14769 , 11352 , 6168 , -16172 , 6208 , 11501 , -15060 , 0 , 15109 , -11576 , -6269 , 16384 , -6269 , -11576 , 15109 , 0 , -15060 , 11501 , 6208 , -16172 , 6168 , 11352 , -14769 , 0 , 14625 , -11132 , -5989 , 15552 , -5911 , -10844 , 14062 , 0 , -13832 , 10493 , 5627 , -14561 , 5516 , 10085 , -13032 , 0 , 12731 , -9625 , -5143 , 13262 , -5006 , -9120 , 11744 , 0 , -11390 , 8580 , 4568 , -11735 , 4413 , 8010 , -10275 , 0 , 9890 , -7421 , -3935 , 10070 , -3772 , -6819 , 8712 , 0 , -8316 , 6214 , 3281 , -8361 , 3118 , 5612 , -7139 , 0 , 6753 , -5023 , -2640 , 6696 , -2486 , -4452 , 5635 , 0 , -5279 , 3906 , 2043 , -5154 , 1903 , 3391 , -4269 , 0 , 3955 , -2910 , -1513 , 3796 , -1394 , -2468 , 3089 , 0 , -2828 , 2068 , 1069 , -2664 , 972 , 1710 , -2127 , 0 , 1921 , -1396 , -717 , 1775 , -643 , -1125 , 1390 , 0 , -1240 , 896 , 457 , -1126 , 406 , 706 , -869 , 0 , 769 , -554 , -282 , 693 , -250 , -434 , 535 , 0 , -476 , 344 , 176 , -437 , 159 , 279 , -347 , 0 , 318 , -234 , -122 , 307},
/*13.0k*/				    	{-248 , -50 , 314 , -243 , -111 , 371 , -232 , -188 , 437 , -209 , -286 , 509 , -169 , -409 , 584 , -102 , -561 , 656 , 0 , -742 , 716 , 147 , -950 , 750 , 348 , -1180 , 745 , 609 , -1422 , 683 , 935 , -1660 , 549 , 1324 , -1878 , 325 , 1771 , -2051 , 0 , 2263 , -2155 , -437 , 2781 , -2164 , -989 , 3303 , -2052 , -1653 , 3796 , -1795 , -2419 , 4228 , -1375 , -3267 , 4561 , -778 , -4170 , 4756 , 0 , -5091 , 4777 , 954 , -5988 , 4593 , 2069 , -6814 , 4175 , 3319 , -7518 , 3508 , 4665 , -8048 , 2584 , 6063 , -8357 , 1408 , 7455 , -8402 , 0 , 8783 , -8147 , -1609 , 9981 , -7569 , -3373 , 10985 , -6659 , -5236 , 11735 , -5419 , -7132 , 12177 , -3869 , -8988 , 12267 , -2046 , -10729 , 11974 , 0 , -12278 , 11282 , 2207 , -13564 , 10192 , 4499 , -14522 , 8723 , 6797 , -15099 , 6910 , 9015 , -15257 , 4806 , 11067 , -14973 , 2476 , 12873 , -14244 , 0 , 14360 , -13084 , -2538 , 15469 , -11527 , -5047 , 16153 , -9622 , -7437 , 16384 , -7437 , -9622 , 16153 , -5047 , -11527 , 15469 , -2538 , -13084 , 14360 , 0 , -14244 , 12873 , 2476 , -14973 , 11067 , 4806 , -15257 , 9015 , 6910 , -15099 , 6797 , 8723 , -14522 , 4499 , 10192 , -13564 , 2207 , 11282 , -12278 , 0 , 11974 , -10729 , -2046 , 12267 , -8988 , -3869 , 12177 , -7132 , -5419 , 11735 , -5236 , -6659 , 10985 , -3373 , -7569 , 9981 , -1609 , -8147 , 8783 , 0 , -8402 , 7455 , 1408 , -8357 , 6063 , 2584 , -8048 , 4665 , 3508 , -7518 , 3319 , 4175 , -6814 , 2069 , 4593 , -5988 , 954 , 4777 , -5091 , 0 , 4756 , -4170 , -778 , 4561 , -3267 , -1375 , 4228 , -2419 , -1795 , 3796 , -1653 , -2052 , 3303 , -989 , -2164 , 2781 , -437 , -2155 , 2263 , 0 , -2051 , 1771 , 325 , -1878 , 1324 , 549 , -1660 , 935 , 683 , -1422 , 609 , 745 , -1180 , 348 , 750 , -950 , 147 , 716 , -742 , 0 , 656 , -561 , -102 , 584 , -409 , -169 , 509 , -286 , -209 , 437 , -188 , -232 , 371 , -111 , -243 , 314 , -50 , -248},
/*13.5k*/				    	{95 , 206 , -326 , 132 , 211 , -375 , 179 , 217 , -437 , 241 , 221 , -514 , 321 , 222 , -607 , 424 , 214 , -716 , 554 , 194 , -842 , 715 , 156 , -980 , 911 , 94 , -1129 , 1145 , 0 , -1283 , 1418 , -132 , -1436 , 1730 , -309 , -1581 , 2082 , -537 , -1710 , 2469 , -823 , -1813 , 2888 , -1171 , -1881 , 3333 , -1585 , -1903 , 3796 , -2066 , -1869 , 4268 , -2615 , -1768 , 4736 , -3230 , -1593 , 5190 , -3906 , -1334 , 5616 , -4638 , -985 , 6001 , -5417 , -541 , 6329 , -6233 , 0 , 6588 , -7072 , 639 , 6764 , -7921 , 1375 , 6845 , -8764 , 2201 , 6819 , -9585 , 3112 , 6678 , -10365 , 4097 , 6415 , -11088 , 5143 , 6026 , -11735 , 6236 , 5508 , -12291 , 7360 , 4864 , -12740 , 8496 , 4098 , -13067 , 9625 , 3217 , -13263 , 10726 , 2231 , -13316 , 11780 , 1154 , -13223 , 12766 , 0 , -12978 , 13665 , -1212 , -12581 , 14459 , -2463 , -12038 , 15133 , -3732 , -11352 , 15671 , -4998 , -10535 , 16064 , -6238 , -9599 , 16304 , -7432 , -8559 , 16384 , -8559 , -7432 , 16304 , -9599 , -6238 , 16064 , -10535 , -4998 , 15671 , -11352 , -3732 , 15133 , -12038 , -2463 , 14459 , -12581 , -1212 , 13665 , -12978 , 0 , 12766 , -13223 , 1154 , 11780 , -13316 , 2231 , 10726 , -13263 , 3217 , 9625 , -13067 , 4098 , 8496 , -12740 , 4864 , 7360 , -12291 , 5508 , 6236 , -11735 , 6026 , 5143 , -11088 , 6415 , 4097 , -10365 , 6678 , 3112 , -9585 , 6819 , 2201 , -8764 , 6845 , 1375 , -7921 , 6764 , 639 , -7072 , 6588 , 0 , -6233 , 6329 , -541 , -5417 , 6001 , -985 , -4638 , 5616 , -1334 , -3906 , 5190 , -1593 , -3230 , 4736 , -1768 , -2615 , 4268 , -1869 , -2066 , 3796 , -1903 , -1585 , 3333 , -1881 , -1171 , 2888 , -1813 , -823 , 2469 , -1710 , -537 , 2082 , -1581 , -309 , 1730 , -1436 , -132 , 1418 , -1283 , 0 , 1145 , -1129 , 94 , 911 , -980 , 156 , 715 , -842 , 194 , 554 , -716 , 214 , 424 , -607 , 222 , 321 , -514 , 221 , 241 , -437 , 217 , 179 , -375 , 211 , 132 , -326 , 206 , 95},
/*14.0k*/					    {95 , -302 , 267 , 0 , -291 , 358 , -122 , -244 , 437 , -271 , -150 , 490 , -442 , 0 , 497 , -621 , 214 , 433 , -783 , 489 , 273 , -894 , 808 , 0 , -911 , 1136 , -391 , -789 , 1422 , -884 , -492 , 1599 , -1436 , 0 , 1597 , -1978 , 676 , 1353 , -2419 , 1493 , 823 , -2656 , 2366 , 0 , -2589 , 3180 , -1079 , -2141 , 3796 , -2324 , -1272 , 4071 , -3599 , 0 , 3879 , -4730 , 1593 , 3137 , -5524 , 3358 , 1825 , -5801 , 5094 , 0 , -5417 , 6561 , -2195 , -4297 , 7518 , -4542 , -2453 , 7750 , -6764 , 0 , 7109 , -8561 , 2848 , 5542 , -9643 , 5794 , 3112 , -9779 , 8490 , 0 , -8830 , 10578 , -3501 , -6779 , 11735 , -7016 , -3749 , 11725 , -10130 , 0 , 10435 , -12442 , 4098 , 7899 , -13611 , 8100 , 4309 , -13415 , 11538 , 0 , -11780 , 13983 , -4586 , -8800 , 15099 , -8946 , -4739 , 14691 , -12581 , 0 , 12737 , -15056 , 4917 , 9396 , -16055 , 9473 , 4998 , -15428 , 13158 , 0 , -13212 , 15554 , -5059 , -9628 , 16384 , -9628 , -5059 , 15554 , -13212 , 0 , 13158 , -15428 , 4998 , 9473 , -16055 , 9396 , 4917 , -15056 , 12737 , 0 , -12581 , 14691 , -4739 , -8946 , 15099 , -8800 , -4586 , 13983 , -11780 , 0 , 11538 , -13415 , 4309 , 8100 , -13611 , 7899 , 4098 , -12442 , 10435 , 0 , -10130 , 11725 , -3749 , -7016 , 11735 , -6779 , -3501 , 10578 , -8830 , 0 , 8490 , -9779 , 3112 , 5794 , -9643 , 5542 , 2848 , -8561 , 7109 , 0 , -6764 , 7750 , -2453 , -4542 , 7518 , -4297 , -2195 , 6561 , -5417 , 0 , 5094 , -5801 , 1825 , 3358 , -5524 , 3137 , 1593 , -4730 , 3879 , 0 , -3599 , 4071 , -1272 , -2324 , 3796 , -2141 , -1079 , 3180 , -2589 , 0 , 2366 , -2656 , 823 , 1493 , -2419 , 1353 , 676 , -1978 , 1597 , 0 , -1436 , 1599 , -492 , -884 , 1422 , -789 , -391 , 1136 , -911 , 0 , 808 , -894 , 273 , 489 , -783 , 433 , 214 , -621 , 497 , 0 , -442 , 490 , -150 , -271 , 437 , -244 , -122 , 358 , -291 , 0 , 267 , -302 , 95},
/*14.5k*/				    	{-248 , 309 , -150 , -132 , 342 , -321 , 62 , 269 , -437 , 299 , 76 , -439 , 519 , -222 , -279 , 634 , -561 , 58 , 554 , -830 , 520 , 220 , -890 , 980 , -348 , -624 , 1251 , -1021 , 0 , 1144 , -1571 , 878 , 549 , -1730 , 1759 , -485 , -1287 , 2295 , -1710 , -199 , 2155 , -2715 , 1328 , 1171 , -3044 , 2851 , -546 , -2365 , 3796 , -2568 , -644 , 3650 , -4231 , 1768 , 2177 , -4836 , 4170 , -419 , -3906 , 5696 , -3471 , -1424 , 5610 , -6001 , 2069 , 3605 , -7016 , 5558 , 0 , -5875 , 7839 , -4258 , -2584 , 7921 , -7830 , 2101 , 5417 , -9400 , 6819 , 773 , -8147 , 9999 , -4764 , -4097 , 10380 , -9483 , 1772 , 7490 , -11735 , 7751 , 1898 , -10512 , 11909 , -4864 , -5856 , 12720 , -10729 , 1054 , 9625 , -13738 , 8197 , 3293 , -12708 , 13316 , -4499 , -7682 , 14657 , -11385 , 0 , 11574 , -15148 , 8071 , 4806 , -14459 , 14027 , -3696 , -9352 , 15937 , -11352 , -1265 , 13084 , -15774 , 7384 , 6238 , -15532 , 13944 , -2561 , -10638 , 16384 , -10638 , -2561 , 13944 , -15532 , 6238 , 7384 , -15774 , 13084 , -1265 , -11352 , 15937 , -9352 , -3696 , 14027 , -14459 , 4806 , 8071 , -15148 , 11574 , 0 , -11385 , 14657 , -7682 , -4499 , 13316 , -12708 , 3293 , 8197 , -13738 , 9625 , 1054 , -10729 , 12720 , -5856 , -4864 , 11909 , -10512 , 1898 , 7751 , -11735 , 7490 , 1772 , -9483 , 10380 , -4097 , -4764 , 9999 , -8147 , 773 , 6819 , -9400 , 5417 , 2101 , -7830 , 7921 , -2584 , -4258 , 7839 , -5875 , 0 , 5558 , -7016 , 3605 , 2069 , -6001 , 5610 , -1424 , -3471 , 5696 , -3906 , -419 , 4170 , -4836 , 2177 , 1768 , -4231 , 3650 , -644 , -2568 , 3796 , -2365 , -546 , 2851 , -3044 , 1171 , 1328 , -2715 , 2155 , -199 , -1710 , 2295 , -1287 , -485 , 1759 , -1730 , 549 , 878 , -1571 , 1144 , 0 , -1021 , 1251 , -624 , -348 , 980 , -890 , 220 , 520 , -830 , 554 , 58 , -561 , 634 , -279 , -222 , 519 , -439 , 76 , 299 , -437 , 269 , 62 , -321 , 342 , -132 , -150 , 309 , -248},
/*15.0k*/				    	{307 , -225 , 0 , 243 , -359 , 266 , 0 , -293 , 437 , -326 , 0 , 364 , -546 , 409 , 0 , -461 , 693 , -521 , 0 , 589 , -885 , 665 , 0 , -750 , 1126 , -845 , 0 , 949 , -1422 , 1064 , 0 , -1189 , 1775 , -1324 , 0 , 1471 , -2189 , 1628 , 0 , -1796 , 2664 , -1974 , 0 , 2164 , -3200 , 2364 , 0 , -2575 , 3796 , -2796 , 0 , 3027 , -4449 , 3267 , 0 , -3517 , 5154 , -3774 , 0 , 4040 , -5905 , 4313 , 0 , -4593 , 6696 , -4878 , 0 , 5169 , -7518 , 5464 , 0 , -5762 , 8361 , -6063 , 0 , 6365 , -9215 , 6668 , 0 , -6970 , 10070 , -7271 , 0 , 7569 , -10914 , 7864 , 0 , -8155 , 11735 , -8440 , 0 , 8718 , -12522 , 8988 , 0 , -9250 , 13262 , -9503 , 0 , 9744 , -13945 , 9974 , 0 , -10192 , 14561 , -10396 , 0 , 10587 , -15099 , 10762 , 0 , -10923 , 15552 , -11067 , 0 , 11194 , -15911 , 11304 , 0 , -11396 , 16172 , -11471 , 0 , 11527 , -16331 , 11564 , 0 , -11583 , 16384 , -11583 , 0 , 11564 , -16331 , 11527 , 0 , -11471 , 16172 , -11396 , 0 , 11304 , -15911 , 11194 , 0 , -11067 , 15552 , -10923 , 0 , 10762 , -15099 , 10587 , 0 , -10396 , 14561 , -10192 , 0 , 9974 , -13945 , 9744 , 0 , -9503 , 13262 , -9250 , 0 , 8988 , -12522 , 8718 , 0 , -8440 , 11735 , -8155 , 0 , 7864 , -10914 , 7569 , 0 , -7271 , 10070 , -6970 , 0 , 6668 , -9215 , 6365 , 0 , -6063 , 8361 , -5762 , 0 , 5464 , -7518 , 5169 , 0 , -4878 , 6696 , -4593 , 0 , 4313 , -5905 , 4040 , 0 , -3774 , 5154 , -3517 , 0 , 3267 , -4449 , 3027 , 0 , -2796 , 3796 , -2575 , 0 , 2364 , -3200 , 2164 , 0 , -1974 , 2664 , -1796 , 0 , 1628 , -2189 , 1471 , 0 , -1324 , 1775 , -1189 , 0 , 1064 , -1422 , 949 , 0 , -845 , 1126 , -750 , 0 , 665 , -885 , 589 , 0 , -521 , 693 , -461 , 0 , 409 , -546 , 364 , 0 , -326 , 437 , -293 , 0 , 266 , -359 , 243 , 0 , -225 , 307},
/*15.5k*/					    {-248 , 74 , 150 , -318 , 342 , -197 , -62 , 315 , -437 , 350 , -76 , -269 , 519 , -535 , 279 , 152 , -561 , 734 , -554 , 65 , 520 , -914 , 890 , -406 , -348 , 1019 , -1251 , 872 , 0 , -977 , 1571 , -1433 , 549 , 717 , -1759 , 2022 , -1287 , -181 , 1710 , -2531 , 2155 , -652 , -1328 , 2828 , -3044 , 1747 , 546 , -2769 , 3796 , -3007 , 644 , 2237 , -4231 , 4269 , -2177 , -1161 , 4170 , -5321 , 3906 , -448 , -3471 , 5931 , -5610 , 2486 , 2069 , -5882 , 7016 , -4747 , 0 , 5018 , -7839 , 6948 , -2584 , -3281 , 7830 , -8752 , 5417 , 740 , -6819 , 9827 , -8147 , 2400 , 4764 , -9890 , 10380 , -5811 , -1772 , 8770 , -11735 , 9076 , -1898 , -6442 , 11909 , -11744 , 5856 , 3054 , -10729 , 13397 , -9625 , 1081 , 8197 , -13716 , 12708 , -5516 , -4499 , 12536 , -14657 , 9724 , 0 , -9885 , 15148 , -13171 , 4806 , 5989 , -14027 , 15393 , -9352 , -1254 , 11352 , -16067 , 13084 , -3787 , -7384 , 15060 , -15532 , 8545 , 2561 , -12456 , 16384 , -12456 , 2561 , 8545 , -15532 , 15060 , -7384 , -3787 , 13084 , -16067 , 11352 , -1254 , -9352 , 15393 , -14027 , 5989 , 4806 , -13171 , 15148 , -9885 , 0 , 9724 , -14657 , 12536 , -4499 , -5516 , 12708 , -13716 , 8197 , 1081 , -9625 , 13397 , -10729 , 3054 , 5856 , -11744 , 11909 , -6442 , -1898 , 9076 , -11735 , 8770 , -1772 , -5811 , 10380 , -9890 , 4764 , 2400 , -8147 , 9827 , -6819 , 740 , 5417 , -8752 , 7830 , -3281 , -2584 , 6948 , -7839 , 5018 , 0 , -4747 , 7016 , -5882 , 2069 , 2486 , -5610 , 5931 , -3471 , -448 , 3906 , -5321 , 4170 , -1161 , -2177 , 4269 , -4231 , 2237 , 644 , -3007 , 3796 , -2769 , 546 , 1747 , -3044 , 2828 , -1328 , -652 , 2155 , -2531 , 1710 , -181 , -1287 , 2022 , -1759 , 717 , 549 , -1433 , 1571 , -977 , 0 , 872 , -1251 , 1019 , -348 , -406 , 890 , -914 , 520 , 65 , -554 , 734 , -561 , 152 , 279 , -535 , 519 , -269 , -76 , 350 , -437 , 315 , -62 , -197 , 342 , -318 , 150 , 74 , -248},
/*16.0k*/					    {95 , 98 , -267 , 344 , -291 , 116 , 122 , -336 , 437 , -373 , 150 , 159 , -442 , 579 , -497 , 202 , 214 , -596 , 783 , -673 , 273 , 291 , -808 , 1061 , -911 , 369 , 391 , -1086 , 1422 , -1217 , 492 , 520 , -1436 , 1873 , -1597 , 643 , 676 , -1862 , 2419 , -2054 , 823 , 863 , -2366 , 3060 , -2589 , 1033 , 1079 , -2946 , 3796 , -3199 , 1272 , 1323 , -3599 , 4621 , -3879 , 1537 , 1593 , -4318 , 5524 , -4622 , 1825 , 1885 , -5094 , 6495 , -5417 , 2132 , 2195 , -5914 , 7518 , -6251 , 2453 , 2518 , -6764 , 8574 , -7109 , 2782 , 2848 , -7629 , 9643 , -7975 , 3112 , 3178 , -8490 , 10705 , -8830 , 3437 , 3501 , -9330 , 11735 , -9656 , 3749 , 3810 , -10130 , 12712 , -10435 , 4043 , 4098 , -10872 , 13611 , -11149 , 4309 , 4359 , -11538 , 14414 , -11780 , 4543 , 4586 , -12113 , 15099 , -12314 , 4739 , 4773 , -12581 , 15650 , -12737 , 4892 , 4917 , -12933 , 16055 , -13039 , 4998 , 5013 , -13158 , 16301 , -13212 , 5054 , 5059 , -13252 , 16384 , -13252 , 5059 , 5054 , -13212 , 16301 , -13158 , 5013 , 4998 , -13039 , 16055 , -12933 , 4917 , 4892 , -12737 , 15650 , -12581 , 4773 , 4739 , -12314 , 15099 , -12113 , 4586 , 4543 , -11780 , 14414 , -11538 , 4359 , 4309 , -11149 , 13611 , -10872 , 4098 , 4043 , -10435 , 12712 , -10130 , 3810 , 3749 , -9656 , 11735 , -9330 , 3501 , 3437 , -8830 , 10705 , -8490 , 3178 , 3112 , -7975 , 9643 , -7629 , 2848 , 2782 , -7109 , 8574 , -6764 , 2518 , 2453 , -6251 , 7518 , -5914 , 2195 , 2132 , -5417 , 6495 , -5094 , 1885 , 1825 , -4622 , 5524 , -4318 , 1593 , 1537 , -3879 , 4621 , -3599 , 1323 , 1272 , -3199 , 3796 , -2946 , 1079 , 1033 , -2589 , 3060 , -2366 , 863 , 823 , -2054 , 2419 , -1862 , 676 , 643 , -1597 , 1873 , -1436 , 520 , 492 , -1217 , 1422 , -1086 , 391 , 369 , -911 , 1061 , -808 , 291 , 273 , -673 , 783 , -596 , 214 , 202 , -497 , 579 , -442 , 159 , 150 , -373 , 437 , -336 , 122 , 116 , -291 , 344 , -267 , 98 , 95}
                              };
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//释放信号检测相关变量
short testpinlv_max;
short testpinlv_ind;
short x1,x2,x3;
short y1,y2,y3;
float a,b;
float x_max;
float f_code;
short code;   //频率码

short block2;
short cmd_indx={0};           //串口控制FSK指令
volatile short testpinlv_flag;
         short FSK_cmd_flag[14]={0,0,0,0,0,0,0,0,0,0,0,0,0,0};
         short sum_count_FSK_cmd1[14]={0,0,0,0,0,0,0,0,0,0,0,0,0,0};

#pragma DATA_SECTION(count_final_jiance,"send")
short count_final_jiance[12]; //释放信号缓存空间
short count_FSK_cmd0[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd1[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd2[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd3[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd4[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd5[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd6[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd7[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd8[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd9[12]={0,0,0,0,0,0,0,0,0,0,0,0};     //释放信号缓存空间
short count_FSK_cmd10[12]={0,0,0,0,0,0,0,0,0,0,0,0};    //释放信号缓存空间
short count_FSK_cmd11[12]={0,0,0,0,0,0,0,0,0,0,0,0};    //释放信号缓存空间
short count_FSK_cmd12[12]={0,0,0,0,0,0,0,0,0,0,0,0};    //释放信号缓存空间
short count_FSK_cmd13[12]={0,0,0,0,0,0,0,0,0,0,0,0};    //释放信号缓存空间
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//信号参数
volatile unsigned long SDRAM_lfmhead;     //SDRAM存储头
short templfm;

//产生参考信号
short RAMSES_freq_H[8] = {10490,11390,12100,12880,13700,14450,15200,16000};
short RAMSES_time_rev[8] = {50,50,50,50,50,50,50,50};

short RAMSES_freq_L[8] = {9640,10540,11250,12030,12850,13600,14350,15150};
short RAMSES_time_send[8] = {1250,1250,1250,1250,1250,1250,1250,1250};

volatile short costas_flag;//信号切换
volatile short lfm_flag;//信号切换
volatile short RAMSES_ref_CIF ; //参考信号偏移
//volatile short RAMSES_ref_IIF ; //参考信号偏移
volatile short RAMSES_ref_IIF ; //发射信号偏移
short RAMSES_CODE[32][8] = {
							{8,	3,	4,	1,	7,	6,	2,	5},//RAMSES code 01#
							{1,	3,	6,	2,	7,	8,	5,	4},
							{1,	4,	5,	3,	7,	6,	8,	2},
							{1,	5,	3,	8,	7,	4,	6,	2},
							{2,	5,	4,	6,	7,	3,	1,	8},
							{2,	7,	3,	5,	6,	4,	1,	8},
							{3,	4,	7,	5,	2,	8,	1,	6},
							{3,	6,	8,	1,	2,	7,	5,	4},
							{1,	5,	6,	3,	8,	7,	2,	4},
							{1,	6,	2,	8,	5,	3,	4,	7},
							{1,	7,	4,	8,	2,	3,	6,	5},
							{4,	7,	2,	3,	8,	6,	5,	1},
							{5,	8,	2,	6,	1,	7,	4,	3},
							{6,	5,	1,	4,	2,	7,	8,	3},
							{6,	8,	3,	7,	1,	2,	5,	4},
							{7,	2,	6,	3,	1,	8,	4,	5},
							{1,	7,	8,	3,	5,	2,	6,	4},
							{8,	4,	2,	5,	7,	1,	6,	3},
							{1,	2,	8,	6,	3,	5,	4,	7},
							{5,	8,	1,	3,	2,	6,	7,	4},
							{6,	3,	2,	4,	8,	1,	7,	5},
							{6,	2,	1,	7,	5,	8,	3,	4},
							{2,	1,	8,	4,	6,	3,	7,	5},
							{4,	2,	8,	1,	5,	7,	6,	3},//RAMSES code 24#
							{1,	5,	7,	4,	3,	8,	6,	2},//costas code 01#
							{2,	5,	6,	4,	8,	7,	1,	3},
							{3,	1,	6,	8,	5,	4,	7,	2},
							{4,	2,	8,	7,	3,	5,	6,	1},
							{5,	3,	7,	4,	6,	1,	2,	8},
							{6,	3,	7,	2,	1,	8,	4,	5},
							{7,	6,	2,	4,	1,	5,	3,	8},
							{8,	3,	4,	1,	6,	2,	5,	7} //costas code 08#
					       };
//---------------------------------------------------------------------------

//数组声明
#pragma DATA_SECTION(Rev1,"receive1")
short Rev1[BUF_LEN_MAX];  //采集数据乒乓缓存区1

#pragma DATA_SECTION(Rev2,"receive2")
short Rev2[BUF_LEN_MAX];  //每次采集数据乒乓缓存区2

#pragma DATA_SECTION(Rev,"NFFT")
short Rev[NFFT];          //重叠保留原始数据

#pragma DATA_SECTION(Rev_FFT,"FFT")
short Rev_FFT[2*NFFT];    //FFT数据缓存

//---------------------------------------------------------------------------
//Benthos release signal detection
#pragma DATA_ALIGN(Rev_bp1,2)
#pragma DATA_SECTION(Rev_bp1,"bp1")
short Rev_bp1[NFFT];            //窄带滤波器1输出

#pragma DATA_ALIGN(Rev_bp2,2)
#pragma DATA_SECTION(Rev_bp2,"bp2")
short Rev_bp2[NFFT];            //窄带滤波器2输出

#pragma DATA_ALIGN(Rev_bp1_abs,2)
#pragma DATA_SECTION(Rev_bp1_abs,"bp1abs")
short Rev_bp1_abs[NFFT];        //窄带滤波器1输出绝对值

#pragma DATA_ALIGN(Rev_bp2_abs,2)
#pragma DATA_SECTION(Rev_bp2_abs,"bp2abs")
short Rev_bp2_abs[NFFT];        //窄带滤波器2输出绝对值

#pragma DATA_SECTION(Rev_bp1_envelope,"bp1envelope")
short Rev_bp1_envelope[NFFT];   //窄带滤波器1输出包络

#pragma DATA_SECTION(Rev_bp2_envelope,"bp2envelope")
short Rev_bp2_envelope[NFFT];   //窄带滤波器2输出包络

#pragma DATA_SECTION(Rev_save,"revsave")
short Rev_save[NFFT];

#pragma DATA_SECTION(Rev_save_filter_out,"revsave")
short Rev_save_filter_out[NFFT];

#pragma DATA_SECTION(temp_dainei_temp,"revsave")
short temp_dainei_temp[NFFT_mingling];

#pragma DATA_SECTION(temp_dainei_temp_fft,"revsave")
short temp_dainei_temp_fft[2*NFFT_mingling];

#pragma DATA_SECTION(temp_dainei_temp_fft_abs,"revsave")
short temp_dainei_temp_fft_abs[NFFT_mingling];
//Benthos release signal detection
//---------------------------------------------------------------------------

#pragma DATA_SECTION(Rev_xcorr,"xcorr")
short Rev_xcorr[2*NFFT];   //相关结果缓存

#pragma DATA_SECTION(Rev_xcorrout,"xcorrout")
short Rev_xcorrout[NFFT]; //与本地序列相关输出

#pragma DATA_ALIGN(Rev_envelope,2)
#pragma DATA_SECTION(Rev_envelope,"envelope")
short Rev_envelope[4096]; //与本地序列相关输出包络

//为CIF/信标1  检测分配空间
#pragma DATA_SECTION(X_ref,".ref")
short X_ref[2*NFFT];        //参考信号

#pragma DATA_SECTION(Rev_xcorrout_temp,"revsave")
short Rev_xcorrout_temp[400];

//为IIF/信标2  检测分配空间
#pragma DATA_SECTION(X_ref2,"revsave")
short X_ref2[2*NFFT];

#pragma DATA_SECTION(Rev_xcorrout_temp2,"revsave")
short Rev_xcorrout_temp2[400];

#pragma DATA_SECTION(Rev_envelope2,"revsave")
short Rev_envelope2[2*NFFT];

//为信标3    参考信号空间
#pragma DATA_SECTION(X_ref3,"revsave")
short X_ref3[2*NFFT];

#pragma DATA_SECTION(Rev_xcorrout_temp3,"send")
short Rev_xcorrout_temp3[400];

#pragma DATA_SECTION(Rev_envelope3,"send")
short Rev_envelope3[2*NFFT];

//为信标4    检测分配空间
#pragma DATA_SECTION(X_ref4,"send")
short X_ref4[2*NFFT];

#pragma DATA_SECTION(Rev_xcorrout_temp4,"send")
short Rev_xcorrout_temp4[400];

#pragma DATA_SECTION(Rev_envelope4,"send")
short Rev_envelope4[2*NFFT];

//发射信号
#pragma DATA_SECTION(Send_sig,"send")
short Send_sig[10000];

//---------------------------------------------------------------------------
//DMA配置变量
volatile short DMAdone;//DMA传输结束标志
volatile Uint32 DMAnum;//DMA接收计数器
volatile Uint16 RevsrcAddrHi,RevsrcAddrLo;
volatile Uint16 Revdst1AddrHi,Revdst1AddrLo;
volatile Uint16 Revdst2AddrHi,Revdst2AddrLo;//DMA接收地址
volatile Uint16 sendsrc0AddrHi, sendsrc0AddrLo;
volatile Uint16 senddst0AddrHi, senddst0AddrLo;
volatile Uint16 sendsrc1AddrHi, sendsrc1AddrLo;
volatile Uint16 senddst1AddrHi, senddst1AddrLo;//发射DMA地址

//定义句柄
DMA_Handle myhDma, hDmaSend0, hDmaSend1 , hDmaSend3;
TIMER_Handle mhTimer0, mhTimer1;
MMC_Handle mmc1;
MMC_CardObj   *card, cardalloc;
MMC_CardIdObj *cid,  cardid;

Uint16 count, retVal;
Uint16 rca;
Uint16 cardtype;
Uint32 SectorCounter;
Uint16 SecCounter[256];//装入扇区号
Uint16 SD_write[256];  //SD卡写入数据
Uint16 SD_read[256];   //SD卡读取数据
short SD_test;
short SD_status;
//----------------------------------通讯程序涉及的全局变量------------------------------------
//char Input_bits[1350];//50个（时延+信标号）数据
char Input_bits[5400] = {1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,1,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0};
long int len_Pwm_Mod; /* PWN调制信号长度　*/
volatile short *AD_temp;//用于DMA1指定源地址
unsigned short addr_temp;//用于DMA1中断，临时存放AD_temp的高16位与低16位
short Frame_count = 0;//帧计数
volatile short DMA_send_over_flag = 0;//发送结束标志位
volatile short  DMA_frame_send_over_flag = 0;//帧发送完毕标志位

#pragma DATA_SECTION(Sig_Tx_temp_1, "Sig_Tx_temp");
unsigned short Sig_Tx_temp_1[480];//通信信号临时中转空间。注：此空前不能跨页！！！也不能包含页首和页尾！！！
#pragma DATA_SECTION(Sig_Tx_temp_2, "Sig_Tx_temp");
unsigned short Sig_Tx_temp_2[480];//通信信号临时中转空间。注：此空前不能跨页！！！也不能包含页首和页尾！！！
#pragma DATA_SECTION(Sig_LFM, "Sig_LFM");
unsigned short Sig_LFM[40000];
#pragma DATA_SECTION(Sig_CW, "Sig_CW");
unsigned short Sig_CW[50000];

#pragma DATA_SECTION(Pwm_RLE, "Pwm_RLE");
short Pwm_RLE[314280];//PWM游程编码
#pragma DATA_SECTION(Pwm_result, "Pwm_result");
short Pwm_result[1555200];//最终结果
//---------I2C Global data definition---------
#define Page_Length  	(128)		//Page_Length为写入的芯片按照页写入一次能够写入的最大长度值
#define EEPROM_addr 	(0x0051)	//I2C从器件的地址





#endif

