#ifndef _GLOBAL_H_
#define _GLOBAL_H_

#include "constant.h"
/*******************************************************************************
* FILENAME
*   global.h
*
* DESCRIPTION
*   此程序的所有参考信号频率为：20~30kHz，包络滤波器设计的截止频率为12kHz
*
*******************************************************************************/

//与ARM数据交互

//原始数据上传位置
#pragma DATA_SECTION(ddr2_buffer,"ddr2_buffer")
short ddr2_buffer[IN_LENGTH*MAXBUFFER];
//检测结果上传位置
#pragma DATA_SECTION(ddr2_delay,"ddr2_dat")
double ddr2_delay[4];
#pragma DATA_SECTION(ddr2_envelop_max, "ddr2_dat")
double ddr2_envelop_max[4];
#pragma DATA_SECTION(ddr2_noise_std, "ddr2_dat")	//std
double ddr2_noise_std[4];	
#pragma DATA_SECTION(ddr2_corr_pos, "ddr2_dat")
int ddr2_corr_pos[4];
#pragma DATA_SECTION(ddr2_real_pulse_width, "ddr2_dat")
int ddr2_real_pulse_width[4];
#pragma DATA_SECTION(ddr2_snr_out, "ddr2_dat")
int ddr2_snr_out[4];
#pragma DATA_SECTION(ddr2_parameter, "ddr2_dat"); //parameter 检测参数上传
struct Para ddr2_parameter;
#pragma DATA_SECTION(ddr2_beacon_status, "ddr2_dat")
char ddr2_beacon_status[4];

//接收命令下传位置
#pragma DATA_SECTION(ddr2_cmd, "ddr2_cmd");
char ddr2_cmd[1024];

//命令在ddr2内存中的具体位置
const char arm_start_flag = 0;

const char arm_syn_flag = 1;
const char arm_syn_type = 2;
const char arm_syn_cyc = 3;

const char arm_parameter_flag = 4;
const char arm_parameter_snr_max = 8;
const char arm_parameter_abs_snr_threshold = 8 + sizeof(double);
const char arm_parameter_rel_snr_threshold = 8 + sizeof(double) + sizeof(int);
const char arm_parameter_rel2_snr_threshold = 8 + sizeof(double) + sizeof(int)*2;
const char arm_parameter_min_pulse_width =  8 + sizeof(double) + sizeof(int)*3;
const char arm_parameter_max_pulse_width = 8 + sizeof(double) + sizeof(int)*4;
const char arm_parameter_w_before = 8 + sizeof(double) + sizeof(int)*5;
const char arm_parameter_w_all = 8 + sizeof(double) + sizeof(int)*6;
const char arm_parameter_w_after = 8 + sizeof(double) + sizeof(int)*7;
const char arm_parameter_close_time = 8 + sizeof(double) + sizeof(int)*8;
const char arm_parameter_th_noise = 8 + sizeof(double) + sizeof(int)*9;
//8+8+4*10 = 56
const char arm_sys_gain = 59;
const char arm_work_mode_flag = 60;
const char arm_work_mode = 61;

const char arm_beacon_flag = 63;
const char arm_beacon_turnaround[4] = {64, 64+sizeof(double), 64+2*sizeof(double), 64+3*sizeof(double)};

//全局变量参数
					      //s_m,s_r,2,s_a,M_l,M_h,w_b,w_a1,w_a2,reverb,th
struct Para Parameter_sig = {0.5, 4, 4, 2, 4, 20, 80, 2, 30, 1000, 100};
struct Sig Sig1, Sig2, Sig3, Sig4;
double Turnaround[4] = {0, 0, 0, 0};	//四个信标转发时延
int send_num = 0;			//发射信号索引
int gain_db[2] = {54, 74};	//两档增益大小

//全局标志位（建议为volatile类型）
char Configure_flag = 0; //配置标识符
char Start_flag = 0;   //开始标识符  

char syn_type = 0; 	//内(1)/外(2)同步模式标志
char syn_cyc = 2;		//工作周期
char Time_over;	    //配置CPLD时间参数
char Work_mode = 0; 	//应答模式1 同步模式2
char sys_gain = 0;		//系统增益标志

int Max_Buffer= 151;	//根据检测周期调整 
int Block_num;			//目前采集的buffer数
int Close_num = 7;	//避混响时间 buffer

char Syn_flag;			//同步到来标志位
char Rx_flag;			//EDMA完成数据搬移标志位
char Pp_flag;			//初始化为ping，接收中断后，将标志映射到pang上
char Trans_flag = 0;

//运算用到的数组
#pragma DATA_ALIGN(w, 8)            //数组首地址以8bytes对齐，即首地址最后三位为0，FFT运算要求
#pragma DATA_ALIGN(Sig_fft, 8)
#pragma DATA_ALIGN(Temp_buffer1, 8)
#pragma DATA_ALIGN(Temp_buffer2, 8)
int w[2*NFFT];
int Sig_fft[2*NFFT];
int Temp_buffer1[2*NFFT];
int Temp_buffer2[2*NFFT];

//乒乓缓存信息参数
#pragma DATA_SECTION(buffer1,"buffer_pingpang")
#pragma DATA_SECTION(buffer2,"buffer_pingpang")
short buffer1[IN_LENGTH];
short buffer2[IN_LENGTH];

#pragma DATA_SECTION(Fifo1,"buffer_pingpang")
short Fifo1[3*IN_LENGTH];


//相关峰信息参数 && 包络信息参数

#pragma DATA_SECTION(Correlation1,"buffer_env")
int Correlation1[2*IN_LENGTH];
#pragma DATA_SECTION(Correlation2,"buffer_env")
int Correlation2[2*IN_LENGTH];
#pragma DATA_SECTION(Correlation3,"buffer_env")
int Correlation3[2*IN_LENGTH];
#pragma DATA_SECTION(Correlation4,"buffer_env")
int Correlation4[2*IN_LENGTH];

#pragma DATA_SECTION(Envelop1,"buffer_env")
int Envelop1[4*IN_LENGTH];
#pragma DATA_SECTION(Envelop2,"buffer_env")
int	Envelop2[4*IN_LENGTH];
#pragma DATA_SECTION(Envelop3,"buffer_env")
int Envelop3[4*IN_LENGTH];
#pragma DATA_SECTION(Envelop4,"buffer_env")
int Envelop4[4*IN_LENGTH];

double F[8] = {10140, 11040, 11750, 12530, 13350, 14100, 14850, 15650};
short CHIP_L = 50;//码片长度为fs*L/8=40*10/8=50
int Refsig_len = 400;
int Sig_flag[4] = {6,8,10,12};
//发射部分
#pragma DATA_SECTION(Trans_signal, "buffer_send_sig")
unsigned short Trans_signal[2500]; 
int Trans_signal_flag = 6;
int Trans_signal_len = 1250;

double RAMSES_CODE[24][8] = {
7, 2, 3, 0, 6, 5, 1, 4,
0, 2, 5, 1, 6, 7, 4, 3,
0, 3, 4, 2, 6, 5, 7, 1,
0, 4, 2, 7, 6, 3, 5, 1,
1, 4, 3, 5, 6, 2, 0, 7,
1, 6, 2, 4, 5, 3, 0, 7,
2, 3, 6, 4, 1, 7, 0, 5,
2, 5, 7, 0, 1, 6, 4, 3,
0, 4, 5, 2, 7, 6, 1, 3,
0, 5, 1, 7, 4, 2, 3, 6,
0, 6, 3, 7, 1, 2, 5, 4,
3, 6, 1, 2, 7, 5, 4, 0,
4, 7, 1, 5, 0, 6, 3, 2,
5, 4, 0, 3, 1, 6, 7, 2,
5, 7, 2, 6, 0, 1, 4, 3,
6, 1, 5, 2, 0, 7, 3, 4,
0, 6, 7, 2, 4, 1, 5, 3,
7, 3, 1, 4, 6, 0, 5, 2,
0, 1, 7, 5, 2, 4, 3, 6,
4, 7, 0, 2, 1, 5, 6, 3,
5, 2, 1, 3, 7, 0, 6, 4,
5, 1, 0, 6, 4, 7, 2, 3,
1, 0, 7, 3, 5, 2, 6, 4,
3, 1, 7, 0, 4, 6, 5, 2
};

#pragma DATA_SECTION(Ref_fft1,"buffer_env_ddr2")
#pragma DATA_SECTION(Ref_fft2,"buffer_env_ddr2")
#pragma DATA_SECTION(Ref_fft3,"buffer_env_ddr2")
#pragma DATA_SECTION(Ref_fft4,"buffer_env_ddr2")

//ramses_2048_40K_10.2ms_A256
short Ref_fft1[2*NFFT];
short Ref_fft2[2*NFFT];
short Ref_fft3[2*NFFT];
short Ref_fft4[2*NFFT];

#pragma DATA_SECTION(Coef_fft,"buffer_coef_fft")

//ramses_1024_40K_fir_LP_6K_A2=32
int Coef_fft[2*NFFT] = {
8193, 0, 7569, -3135, 5792, -5792, 3134, -7567, 0, -8189, -3133, -7565, -5789, -5789, -7563, -3133, -8185, 0, -7562, 3132,
-5788, 5788, -3133, 7564, 0, 8188, 3134, 7566, 5792, 5792, 7568, 3135, 8192, 0, 7568, -3135, 5792, -5792, 3134, -7567,
0, -8189, -3133, -7565, -5789, -5789, -7563, -3133, -8185, 0, -7562, 3132, -5788, 5788, -3133, 7564, 0, 8188, 3134, 7566,
5792, 5792, 7568, 3135, 8193, 0, 7569, -3135, 5793, -5793, 3135, -7568, 0, -8190, -3134, -7565, -5789, -5789, -7562, -3132,
-8184, 0, -7561, 3132, -5787, 5787, -3132, 7562, 0, 8186, 3133, 7564, 5790, 5790, 7567, 3134, 8192, 0, 7569, -3135,
5793, -5793, 3135, -7568, 0, -8191, -3134, -7566, -5790, -5790, -7564, -3133, -8186, 0, -7562, 3132, -5788, 5788, -3132, 7562,
0, 8187, 3133, 7565, 5791, 5791, 7567, 3134, 8192, 0, 7569, -3135, 5793, -5793, 3135, -7568, 0, -8190, -3134, -7565,
-5789, -5789, -7562, -3132, -8184, 0, -7561, 3132, -5787, 5787, -3132, 7562, 0, 8186, 3133, 7565, 5791, 5791, 7568, 3135,
8193, 0, 7570, -3136, 5794, -5794, 3135, -7569, 0, -8191, -3134, -7565, -5789, -5789, -7561, -3132, -8183, 0, -7559, 3131,
-5785, 5785, -3131, 7560, 0, 8185, 3133, 7564, 5791, 5791, 7568, 3135, 8194, 0, 7571, -3136, 5795, -5795, 3136, -7571,
0, -8193, -3134, -7567, -5789, -5789, -7562, -3132, -8183, 0, -7559, 3131, -5786, 5786, -3132, 7560, 0, 8185, 3133, 7565,
5792, 5792, 7570, 3136, 8196, 0, 7573, -3137, 5796, -5796, 3136, -7572, 0, -8193, -3134, -7566, -5788, -5788, -7560, -3131,
-8180, 0, -7556, 3130, -5783, 5783, -3130, 7557, 0, 8182, 3132, 7562, 5790, 5790, 7567, 3134, 8193, 0, 7570, -3136,
5794, -5794, 3135, -7570, 0, -8193, -3135, -7570, -5795, -5795, -7574, -3137, -8202, 0, -7580, 3140, -5802, 5802, -3138, 7575,
0, 8181, 3117, 7526, 5717, 5717, 7384, 3059, 7860, 0, 7097, -2940, 5269, -5269, 2742, -6621, 0, -6825, -2460, -5939,
-4230, -4230, -5075, -2102, -4971, 0, -4090, 1694, -2740, 2740, -1274, 3075, 0, 2800, 881, 2127, 1305, 1305, 1329, 550,
1085, 0, 728, -301, 387, -387, 137, -332, 0, -219, -46, -111, -38, -38, -14, -6, 5, 0, 12, -5,
10, -10, 4, -10, 0, -8, -2, -6, -4, -4, -6, -3, -8, 0, -8, 3, -6, 6, -3, 7,
0, 5, 1, 2, -2, -2, -6, -2, -9, 0, -10, 4, -7, 7, -3, 8, 0, 5, 0, 1,
-2, -2, -7, -3, -11, 0, -11, 5, -9, 9, -4, 10, 0, 7, 1, 3, -1, -1, -5, -2,
-9, 0, -10, 4, -8, 8, -3, 8, 0, 6, 1, 2, -2, -2, -6, -2, -9, 0, -10, 4,
-8, 8, -4, 9, 0, 7, 1, 3, 0, 0, -4, -2, -7, 0, -8, 3, -7, 7, -3, 8,
0, 6, 1, 3, 0, 0, -3, -1, -6, 0, -7, 3, -5, 5, -2, 6, 0, 4, 1, 2,
-1, -1, -4, -2, -6, 0, -7, 3, -5, 5, -2, 6, 0, 4, 1, 2, -1, -1, -3, -1,
-5, 0, -6, 2, -5, 5, -2, 5, 0, 4, 1, 2, 0, 0, -3, -1, -4, 0, -5, 2,
-4, 4, -2, 4, 0, 2, 0, 0, -2, -2, -4, -2, -6, 0, -6, 2, -4, 4, -2, 4,
0, 3, 0, 0, -1, -1, -4, -1, -5, 0, -5, 2, -4, 4, -1, 3, 0, 2, 0, -1,
-2, -2, -5, -2, -7, 0, -7, 3, -5, 5, -2, 5, 0, 4, 1, 2, -1, -1, -3, -1,
-4, 0, -5, 2, -3, 3, -2, 4, 0, 2, 0, 0, -1, -1, -3, -1, -5, 0, -5, 2,
-4, 4, -2, 4, 0, 3, 0, 1, -1, -1, -3, -1, -4, 0, -4, 2, -3, 3, -1, 3,
0, 2, 0, 0, -2, -2, -4, -2, -5, 0, -5, 2, -4, 4, -2, 4, 0, 2, 0, 0,
-1, -1, -3, -1, -5, 0, -5, 2, -3, 3, -1, 3, 0, 2, 0, 0, -1, -1, -3, -1,
-4, 0, -4, 2, -3, 3, -1, 3, 0, 2, 0, 0, -2, -2, -4, -1, -5, 0, -5, 2,
-4, 4, -2, 4, 0, 3, 0, 1, -1, -1, -2, -1, -4, 0, -4, 2, -3, 3, -1, 3,
0, 2, 0, 0, -1, -1, -3, -1, -4, 0, -4, 2, -3, 3, -1, 3, 0, 2, 0, 1,
0, 0, -2, -1, -3, 0, -3, 1, -2, 2, -1, 2, 0, 1, 0, 0, -1, -1, -2, -1,
-3, 0, -3, 1, -2, 2, -1, 2, 0, 1, 0, -1, -2, -2, -3, -1, -4, 0, -4, 2,
-3, 3, -1, 2, 0, 1, 0, 0, -1, -1, -3, -1, -4, 0, -4, 2, -3, 3, -1, 3,
0, 2, 0, 0, -1, -1, -2, -1, -3, 0, -3, 1, -2, 2, -1, 1, 0, 0, 0, -1,
-2, -2, -3, -1, -4, 0, -4, 1, -2, 2, -1, 2, 0, 1, 0, 0, -1, -1, -2, -1,
-3, 0, -3, 1, -2, 2, -1, 2, 0, 0, 0, -1, -2, -2, -3, -1, -4, 0, -3, 1,
-2, 2, -1, 2, 0, 1, 0, 0, -1, -1, -2, -1, -3, 0, -2, 1, -1, 1, 0, 1,
0, -1, -1, -2, -2, -2, -4, -2, -5, 0, -4, 2, -3, 3, -1, 2, 0, 1, 0, 0,
-1, -1, -3, -1, -3, 0, -3, 1, -2, 2, -1, 2, 0, 1, 0, 0, -1, -1, -2, -1,
-3, 0, -3, 1, -2, 2, -1, 2, 0, 1, 0, -1, -1, -1, -2, -1, -3, 0, -2, 1,
-1, 1, 0, 1, 0, 0, -1, -2, -2, -2, -3, -1, -4, 0, -3, 1, -2, 2, 0, 1,
0, -1, -1, -2, -2, -2, -4, -2, -4, 0, -4, 2, -2, 2, -1, 2, 0, 1, 0, -1,
-1, -1, -3, -1, -3, 0, -3, 1, -2, 2, -1, 1, 0, 0, 0, -1, -2, -2, -3, -1,
-4, 0, -3, 1, -2, 2, -1, 2, 0, 0, 0, -1, -1, -1, -2, -1, -3, 0, -2, 1,
-1, 1, 0, 1, 0, -1, -1, -2, -2, -2, -3, -1, -4, 0, -3, 1, -2, 2, 0, 1,
0, 0, -1, -1, -2, -2, -3, -1, -3, 0, -3, 1, -1, 1, 0, 0, 0, -1, -1, -3,
-3, -3, -5, -2, -6, 0, -5, 2, -3, 3, -1, 3, 0, 1, 0, 0, -1, -1, -3, -1,
-3, 0, -3, 1, -2, 2, -1, 1, 0, 0, 0, -1, -2, -2, -3, -1, -4, 0, -3, 1,
-2, 2, -1, 2, 0, 1, 0, -1, -1, -1, -2, -1, -3, 0, -2, 1, -1, 1, 0, 1,
0, 0, -1, -2, -2, -2, -3, -1, -4, 0, -3, 1, -2, 2, 0, 1, 0, 0, -1, -1,
-2, -2, -3, -1, -3, 0, -3, 1, -1, 1, 0, 1, 0, -1, -1, -2, -2, -2, -4, -2,
-4, 0, -4, 2, -2, 2, -1, 2, 0, 1, 0, -1, -2, -2, -3, -1, -4, 0, -3, 1,
-2, 2, -1, 2, 0, 0, 0, -1, -1, -1, -2, -1, -3, 0, -2, 1, -1, 1, 0, 1,
0, -1, -1, -2, -2, -2, -3, -1, -3, 0, -2, 1, -1, 1, 0, 0, 0, -1, -1, -2,
-2, -2, -3, -1, -3, 0, -3, 1, -1, 1, 0, 0, 0, -1, -1, -2, -3, -3, -4, -2,
-5, 0, -4, 2, -2, 2, -1, 2, 0, 1, 0, -1, -1, -1, -2, -1, -3, 0, -2, 1,
-1, 1, 0, 0, 0, -1, -1, -2, -2, -2, -3, -1, -4, 0, -3, 1, -2, 2, 0, 1,
0, 0, -1, -2, -2, -2, -3, -1, -3, 0, -2, 1, -1, 1, 0, 0, 0, -1, -1, -2,
-2, -2, -4, -1, -4, 0, -3, 1, -2, 2, 0, 1, 0, 0, -1, -1, -2, -2, -3, -1,
-3, 0, -2, 1, -1, 1, 0, 0, 0, -2, -1, -3, -3, -3, -4, -2, -4, 0, -3, 1,
-1, 1, 0, 0, 0, -1, -1, -2, -3, -3, -4, -2, -4, 0, -3, 1, -2, 2, 0, 1,
0, -1, -1, -2, -2, -2, -3, -1, -3, 0, -2, 1, -1, 1, 0, 0, 0, -1, -1, -2,
-2, -2, -3, -1, -3, 0, -2, 1, 0, 0, 0, -1, 0, -2, -1, -3, -3, -3, -4, -2,
-4, 0, -3, 1, -1, 1, 0, 0, 0, -2, -1, -3, -3, -3, -4, -2, -4, 0, -2, 1,
-1, 1, 0, -1, 0, -3, -2, -4, -4, -4, -5, -2, -5, 0, -4, 1, -2, 2, 0, 0,
0, -2, -1, -3, -3, -3, -4, -2, -4, 0, -3, 1, -1, 1, 0, 0, 0, -2, -1, -3,
-3, -3, -5, -2, -5, 0, -3, 1, -1, 1, 0, 0, 0, -2, -2, -4, -4, -4, -5, -2,
-5, 0, -4, 2, -2, 2, 0, 0, 0, -2, -1, -3, -3, -3, -4, -2, -4, 0, -3, 1,
-1, 1, 0, -1, 0, -3, -2, -4, -4, -4, -5, -2, -5, 0, -3, 1, -1, 1, 0, 0,
0, -2, -2, -4, -3, -3, -5, -2, -4, 0, -3, 1, -1, 1, 1, -2, 0, -4, -2, -5,
-5, -5, -7, -3, -7, 0, -5, 2, -2, 2, 0, 1, 0, -2, -1, -3, -4, -4, -5, -2,
-5, 0, -4, 1, -1, 1, 0, 0, 0, -3, -2, -4, -4, -4, -6, -2, -6, 0, -4, 2,
-2, 2, 0, 0, 0, -2, -2, -4, -4, -4, -5, -2, -4, 0, -3, 1, 0, 0, 1, -2,
0, -4, -2, -5, -5, -5, -6, -2, -5, 0, -3, 1, -1, 1, 1, -2, 0, -4, -2, -6,
-5, -5, -7, -3, -6, 0, -4, 2, -1, 1, 1, -2, 0, -4, -2, -6, -5, -5, -7, -3,
-6, 0, -3, 1, 0, 0, 1, -3, 0, -6, -3, -8, -7, -7, -8, -3, -7, 0, -4, 2,
0, 0, 1, -3, 0, -7, -4, -9, -8, -8, -10, -4, -9, 0, -6, 2, -2, 2, 1, -2,
0, -6, -3, -8, -8, -8, -10, -4, -9, 0, -5, 2, -1, 1, 1, -3, 0, -7, -4, -10,
-9, -9, -11, -5, -11, 0, -7, 3, -2, 2, 0, -1, 0, -5, -3, -8, -7, -7, -10, -4,
-9, 0, -6, 2, -2, 2, 1, -2, 0, -5, -3, -7, -6, -6, -8, -3, -8, 0, -6, 3,
-4, 4, -2, 6, 0, 8, 4, 10, 10, 10, 12, 5, 5, 0, -14, 6, -38, 38, -46, 111,
0, 219, 137, 332, 387, 387, 728, 301, 1085, 0, 1329, -550, 1305, -1305, 881, -2127, 0, -2800, -1274, -3075,
-2740, -2740, -4090, -1694, -4971, 0, -5075, 2102, -4230, 4230, -2460, 5939, 0, 6825, 2742, 6621, 5269, 5269, 7097, 2940,
7860, 0, 7384, -3059, 5717, -5717, 3117, -7526, 0, -8181, -3138, -7575, -5802, -5802, -7580, -3140, -8202, 0, -7574, 3137,
-5795, 5795, -3135, 7570, 0, 8193, 3135, 7570, 5794, 5794, 7570, 3136, 8193, 0, 7567, -3134, 5790, -5790, 3132, -7562,
0, -8182, -3130, -7557, -5783, -5783, -7556, -3130, -8180, 0, -7560, 3131, -5788, 5788, -3134, 7566, 0, 8193, 3136, 7572,
5796, 5796, 7573, 3137, 8196, 0, 7570, -3136, 5792, -5792, 3133, -7565, 0, -8185, -3132, -7560, -5786, -5786, -7559, -3131,
-8183, 0, -7562, 3132, -5789, 5789, -3134, 7567, 0, 8193, 3136, 7571, 5795, 5795, 7571, 3136, 8194, 0, 7568, -3135,
5791, -5791, 3133, -7564, 0, -8185, -3131, -7560, -5785, -5785, -7559, -3131, -8183, 0, -7561, 3132, -5789, 5789, -3134, 7565,
0, 8191, 3135, 7569, 5794, 5794, 7570, 3136, 8193, 0, 7568, -3135, 5791, -5791, 3133, -7565, 0, -8186, -3132, -7562,
-5787, -5787, -7561, -3132, -8184, 0, -7562, 3132, -5789, 5789, -3134, 7565, 0, 8190, 3135, 7568, 5793, 5793, 7569, 3135,
8192, 0, 7567, -3134, 5791, -5791, 3133, -7565, 0, -8187, -3132, -7562, -5788, -5788, -7562, -3132, -8186, 0, -7564, 3133,
-5790, 5790, -3134, 7566, 0, 8191, 3135, 7568, 5793, 5793, 7569, 3135, 8192, 0, 7567, -3134, 5790, -5790, 3133, -7564,
0, -8186, -3132, -7562, -5787, -5787, -7561, -3132, -8184, 0, -7562, 3132, -5789, 5789, -3134, 7565, 0, 8190, 3135, 7568,
5793, 5793, 7569, 3135, 8193, 0, 7568, -3135, 5792, -5792, 3134, -7566, 0, -8188, -3133, -7564, -5788, -5788, -7562, -3132,
-8185, 0, -7563, 3133, -5789, 5789, -3133, 7565, 0, 8189, 3134, 7567, 5792, 5792, 7568, 3135, 8192, 0, 7568, -3135,
5792, -5792, 3134, -7566, 0, -8188, -3133, -7564, -5788, -5788, -7562, -3132, -8185, 0, -7563, 3133, -5789, 5789, -3133, 7565,
0, 8189, 3134, 7567, 5792, 5792, 7569, 3135
};

#endif



